name: Automation ü§ñ

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
  pull_request_target:

jobs:
  project:
    # don't run job on forks and prevent job from running twice when a PR pushes a new commit
    if: github.repository == 'jellyfin/jellyfin-roku' && github.event_name != 'pull_request' || github.repository == 'jellyfin/jellyfin-roku' && github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: Project board üìä
    runs-on: ubuntu-latest
    steps:
      - uses: alex-page/github-project-automation-plus@303f24a24c67ce7adf565a07e96720faf126fe36 # v0.9.0
        if: ${{ github.event_name == 'pull_request_target' }}
        continue-on-error: true
        with:
          project: Ongoing development
          column: In progress
          repo-token: ${{ secrets.JF_BOT_TOKEN }}
  label:
    # don't run job on forks and prevent job from running twice when a PR pushes a new commit
    if: github.repository == 'jellyfin/jellyfin-roku' && github.event_name != 'pull_request' || github.repository == 'jellyfin/jellyfin-roku' && github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: Labeling üè∑Ô∏è
    runs-on: ubuntu-latest
    steps:
      - name: Check all PRs for merge conflicts ‚õî
        uses: eps1lon/actions-label-merge-conflict@releases/2.x
        with:
          dirtyLabel: "merge-conflict"
          commentOnDirty: "This pull request has merge conflicts. Please resolve the conflicts so the PR can be reviewed. Thanks!"
          repoToken: ${{ secrets.JF_BOT_TOKEN }}
