import "pkg:/source/utils/misc.bs"

sub init()
  m.top.setFocus(true)
  m.top.optionsAvailable = false
end sub

' JRScreen hook.
sub OnScreenShown()
  scene = m.top.getScene()
  overhang = scene.findNode("overhang")
  if isValid(overhang)
    overhang.isLogoVisible = true
    overhang.currentUser = ""
  end if
end sub

function onKeyEvent(key as string, press as boolean) as boolean
  ' Returns true if user navigates to a new focusable element
  if not press then return false

  list = m.top.findNode("configOptions")
  checkbox = m.top.findNode("onOff")
  submit = m.top.findNode("submit")
  quickConnect = m.top.findNode("quickConnect")
  if key = "back"
    m.top.backPressed = true
  else if key = "down" and not isValid(checkbox.focusedChild) and not isValid(submit.focusedChild)
    limit = list.content.getChildren(-1, 0).count() - 1

    if limit = list.itemFocused
      checkbox.setFocus(true)
      return true
    end if
  else if key = "down" and not isValid(submit.focusedChild)
    submit.setFocus(true)
    return true
  else if key = "up" and isValid(submit.focusedChild)
    checkbox.setFocus(true)
    return true
  else if key = "up" and isValid(quickConnect.focusedChild)
    checkbox.setFocus(true)
    return true
  else if key = "up" and isValid(checkbox.focusedChild)
    list.setFocus(true)
    return true
  else if key = "right" and isValid(checkbox.focusedChild)
    quickConnect.setFocus(true)
    return true
  else if key = "right" and isValid(submit.focusedChild)
    quickConnect.setFocus(true)
    return true
  else if key = "left" and isValid(quickConnect.focusedChild)
    submit.setFocus(true)
    return true
  end if
  return false
end function
