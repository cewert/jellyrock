import "pkg:/source/utils/misc.bs"

sub init()
  m.top.visible = true
  updateSize()
  m.top.observeField("rowItemSelected", "onRowItemSelected")
  m.top.observeField("rowItemFocused", "onRowItemFocused")

  ' Set up all Tasks
  m.loadPeopleTask = CreateObject("roSGNode", "LoadItemsTask")
  m.loadPeopleTask.itemsToLoad = "people"
  m.loadPeopleTask.observeField("content", "onPeopleLoaded")
  m.likeThisTask = CreateObject("roSGNode", "LoadItemsTask")
  m.likeThisTask.itemsToLoad = "likethis"
  m.likeThisTask.observeField("content", "onLikeThisLoaded")
  m.specialFeaturesTask = CreateObject("roSGNode", "LoadItemsTask")
  m.specialFeaturesTask.itemsToLoad = "specialfeatures"
  m.specialFeaturesTask.observeField("content", "onSpecialFeaturesLoaded")
  m.loadAdditionalPartsTask = CreateObject("roSGNode", "LoadItemsTask")
  m.loadAdditionalPartsTask.itemsToLoad = "additionalparts"
  m.loadAdditionalPartsTask.observeField("content", "onAdditionalPartsLoaded")
  m.loadMoviesTask = CreateObject("roSGNode", "LoadItemsTask")
  m.loadMoviesTask.itemsToLoad = "personMovies"
  m.loadShowsTask = CreateObject("roSGNode", "LoadItemsTask")
  m.loadShowsTask.itemsToLoad = "personTVShows"
  m.loadSeriesTask = CreateObject("roSGNode", "LoadItemsTask")
  m.loadSeriesTask.itemsToLoad = "personSeries"
end sub

sub updateSize()
  itemHeight = 396
  m.top.itemSize = [1920, itemHeight]
  m.top.rowItemSpacing = [36, 36]

  ' override defaults from JRRowList
  m.top.vertFocusAnimationStyle = "fixedFocus"
end sub

sub loadParts(data as object)
  m.top.parentId = data.id
  m.people = data.People
  m.loadAdditionalPartsTask.itemId = m.top.parentId
  m.loadAdditionalPartsTask.control = "RUN"
end sub

sub loadPersonVideos(personId)
  m.personId = personId
  m.loadMoviesTask.itemId = m.personId
  m.loadMoviesTask.observeField("content", "onMoviesLoaded")
  m.loadMoviesTask.control = "RUN"
end sub

sub onAdditionalPartsLoaded()
  parts = m.loadAdditionalPartsTask.content
  m.loadAdditionalPartsTask.unobserveField("content")

  data = CreateObject("roSGNode", "ContentNode") ' The row Node
  m.top.content = data
  if isValid(parts) and parts.count() > 0
    row = buildRow(tr("Additional Parts"), parts, 464)
    addRowSize([464, 291])
    m.top.content.appendChild(row)
    m.top.rowItemSize = [[464, 291]]
  else
    m.top.rowItemSize = [[234, 396]]
  end if

  ' Load Cast and Crew and everything else...
  m.loadPeopleTask.peopleList = m.people
  m.loadPeopleTask.control = "RUN"
end sub

sub onPeopleLoaded()
  people = m.loadPeopleTask.content
  m.loadPeopleTask.unobserveField("content")
  if isValid(people) and people.count() > 0
    row = m.top.content.createChild("ContentNode")
    row.Title = tr("Cast & Crew")
    for each person in people
      if person.json.type = "Actor" and isValid(person.json.Role) and person.json.Role.ToStr().Trim() <> ""
        person.subTitle = "as " + person.json.Role
      else
        person.subTitle = person.json.type
      end if
      person.type = "Person"
      row.appendChild(person)
    end for
  end if
  m.likeThisTask.itemId = m.top.parentId
  m.likeThisTask.control = "RUN"
end sub

sub onLikeThisLoaded()
  data = m.likeThisTask.content
  m.likeThisTask.unobserveField("content")
  if isValid(data) and data.count() > 0
    row = m.top.content.createChild("ContentNode")
    row.Title = tr("More Like This")
    for each item in data
      item.id = item.json.id
      item.labelText = item.json.Name
      if isValid(item.json.ProductionYear)
        item.subTitle = stri(item.json.ProductionYear)
      else if isValid(item.json.PremiereDate)
        premierYear = CreateObject("roDateTime")
        premierYear.FromISO8601String(item.json.PremiereDate)
        item.subTitle = stri(premierYear.GetYear())
      end if
      item.type = item.json.type
      row.appendChild(item)
    end for
    addRowSize([234, 396])
  end if
  ' Special Features next...
  m.specialFeaturesTask.itemId = m.top.parentId
  m.specialFeaturesTask.control = "RUN"
end sub

function onSpecialFeaturesLoaded()
  data = m.specialFeaturesTask.content
  m.specialFeaturesTask.unobserveField("content")
  if isValid(data) and data.count() > 0
    row = m.top.content.createChild("ContentNode")
    row.Title = tr("Special Features")
    for each item in data
      m.top.visible = true
      item.id = item.json.id
      item.labelText = item.json.Name
      item.subTitle = ""
      item.type = item.json.type
      item.imageWidth = 450
      row.appendChild(item)
    end for
    addRowSize([462, 372])
  end if

  return m.top.content
end function

sub onMoviesLoaded()
  data = m.loadMoviesTask.content
  m.loadMoviesTask.unobserveField("content")
  rlContent = CreateObject("roSGNode", "ContentNode")
  if isValid(data) and data.count() > 0
    row = rlContent.createChild("ContentNode")
    row.title = tr("Movies")
    for each mov in data
      mov.id = mov.json.id
      mov.labelText = mov.json.Name
      mov.subTitle = mov.json.ProductionYear
      mov.type = mov.json.type
      row.appendChild(mov)
    end for
    m.top.rowItemSize = [[234, 396]]
  end if
  m.top.content = rlContent
  m.loadShowsTask.itemId = m.personId
  m.loadShowsTask.observeField("content", "onShowsLoaded")
  m.loadShowsTask.control = "RUN"
end sub

sub onShowsLoaded()
  data = m.loadShowsTask.content
  m.loadShowsTask.unobserveField("content")
  if isValid(data) and data.count() > 0
    row = buildRow("TV Shows", data, 502)
    addRowSize([502, 396])
    m.top.content.appendChild(row)
  end if
  m.loadSeriesTask.itemId = m.personId
  m.loadSeriesTask.observeField("content", "onSeriesLoaded")
  m.loadSeriesTask.control = "RUN"
end sub

sub onSeriesLoaded()
  data = m.loadSeriesTask.content
  m.loadSeriesTask.unobserveField("content")
  if isValid(data) and data.count() > 0
    row = buildRow("Series", data)
    addRowSize([234, 396])
    m.top.content.appendChild(row)
  end if
  m.top.visible = true
end sub

function buildRow(rowTitle as string, items, imgWdth = 0)
  row = CreateObject("roSGNode", "ContentNode")
  row.Title = tr(rowTitle)
  for each mov in items
    if LCase(mov.json.type) = "episode"
      if isAllValid([mov.json.SeriesName, mov.json.ParentIndexNumber, mov.json.IndexNumber, mov.json.Name])
        mov.labelText = mov.json.SeriesName
        mov.subTitle = `S${mov.json.ParentIndexNumber}:E${mov.json.IndexNumber} - ${mov.json.Name}`
      else
        mov.labelText = mov.json.Name
        mov.subTitle = mov.json.ProductionYear
      end if
    else
      mov.labelText = mov.json.Name
      mov.subTitle = mov.json.ProductionYear
    end if

    mov.id = mov.json.id
    mov.type = mov.json.type
    if imgWdth > 0
      mov.imageWidth = imgWdth
    end if
    row.appendChild(mov)
  end for
  return row
end function

sub addRowSize(newRow)
  sizeArray = m.top.rowItemSize
  newSizeArray = []
  for each size in sizeArray
    newSizeArray.push(size)
  end for
  newSizeArray.push(newRow)
  m.top.rowItemSize = newSizeArray
end sub

sub onRowItemSelected()
  m.top.selectedItem = m.top.content.getChild(m.top.rowItemSelected[0]).getChild(m.top.rowItemSelected[1])
end sub

sub onRowItemFocused()
  m.top.focusedItem = m.top.content.getChild(m.top.rowItemFocused[0]).getChild(m.top.rowItemFocused[1])
end sub
