import "pkg:/source/api/baserequest.bs"
import "pkg:/source/utils/config.bs"
import "pkg:/source/utils/misc.bs"

sub init()
  m.top.functionName = "loadChannels"
end sub

sub loadChannels()

  results = []

  sortField = m.top.sortField

  if m.top.sortAscending = true
    sortOrder = "Ascending"
  else
    sortOrder = "Descending"
  end if

  params = {
    includeItemTypes: "LiveTvChannel",
    SortBy: sortField,
    SortOrder: sortOrder,
    recursive: m.top.recursive,
    UserId: m.global.session.user.id
  }

  ' Handle special case when getting names starting with numeral
  if m.top.NameStartsWith <> ""
    if m.top.NameStartsWith = "#"
      params.searchterm = "A"
    else
      params.searchterm = m.top.nameStartsWith
    end if
  end if

  'Append voice search when there is text
  if m.top.searchTerm <> ""
    params.searchTerm = m.top.searchTerm
  end if

  if m.top.filter = "Favorites"
    params.append({ isFavorite: true })
  end if

  url = Substitute("Users/{0}/Items/", m.global.session.user.id)

  resp = APIRequest(url, params)
  data = getJson(resp)

  if not isValid(data.TotalRecordCount)
    m.top.channels = results
    return
  end if


  for each item in data.Items
    channel = createObject("roSGNode", "ChannelData")
    channel.json = item
    if isValid(item.UserData) and isValid(item.UserData.isFavorite)
      channel.favorite = item.UserData.isFavorite
      if channel.favorite = true
        results.Unshift(channel)
      else
        results.push(channel)
      end if
    else
      results.push(channel)
    end if
  end for
  m.top.channels = results
end sub
