import "pkg:/source/utils/config.bs"

namespace RegistryTestUtils

  ' Delete all registry sections that match test user pattern
  sub CleanupTestRegistrySections(pattern = "test-user-" as string)
    registry = CreateObject("roRegistry")
    allSections = registry.GetSectionList()
    deletedCount = 0

    for each sectionName in allSections
      if sectionName.StartsWith(pattern)
        registrySection = CreateObject("roRegistrySection", sectionName)
        if isValid(registrySection)
          keyList = registrySection.GetKeyList()
          for each key in keyList
            registrySection.delete(key)
          end for
          registrySection.flush()
          deletedCount++
        end if
      end if
    end for

    if deletedCount > 0
      print "RegistryTestUtils: Cleaned up " + deletedCount.ToStr() + " test registry sections"
    end if
  end sub

  ' Return an array of registry section names that match pattern
  function GetTestRegistrySections(pattern = "test-user-" as string) as object
    registry = CreateObject("roRegistry")
    allSections = registry.GetSectionList()
    matchingSections = []
    for each sectionName in allSections
      if sectionName.StartsWith(pattern)
        matchingSections.Push(sectionName)
      end if
    end for
    return matchingSections
  end function

  function VerifyNoTestRegistrySections(pattern = "test-user-" as string) as boolean
    testSections = GetTestRegistrySections(pattern)
    return testSections.Count() = 0
  end function

  sub PrintAllRegistrySections()
    registry = CreateObject("roRegistry")
    allSections = registry.GetSectionList()
    print "===== All Registry Sections ====="
    print "Total sections: " + allSections.Count().ToStr()
    testSections = []
    prodSections = []
    for each sectionName in allSections
      if sectionName.StartsWith("test-user-")
        testSections.Push(sectionName)
      else
        prodSections.Push(sectionName)
      end if
    end for
    print ""
    print "Test sections (" + testSections.Count().ToStr() + "):"
    for each name in testSections
      print "  - " + name
    end for
    print ""
    print "Production sections (" + prodSections.Count().ToStr() + "):"
    for each name in prodSections
      print "  - " + name
    end for
    print "=================================="
  end sub

end namespace
